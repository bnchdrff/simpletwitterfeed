<?php
/**
Plugin Name: Simple Twitter Feed
Plugin URI: http://URI_Of_Page_Describing_Plugin_and_Updates
Description: This widget returns a simple twitter feed using standard OAuth now required by Twitter's 1.1 API.
Version: 1.0
Author: Robert Danklefsen
Author URI: http://www.catchylabs.com/drupal/simple-twitter-feed
License: GPL2

Copyright 2013  Robert Danklefsen  (email : bobby@catchylabs.com)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License, version 2, as
    published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

/**
 * Implements hook_block_info().
 */
function simpletwitterfeed_block_info() {
    $blocks['simple_twitter_feed'] = array(
      'info' => t('Simple Twitter Feed'), //The name that will appear in the block list.
      'cache' => DRUPAL_NO_CACHE, //Don't cache block
    );
    return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function simpletwitterfeed_block_configure($delta = '') {
  $form = array();
  switch($delta) {
    case 'simple_twitter_feed':
      //username
      $form['simpletwitterfeed_username'] = array(
        '#type' => 'textfield',
        '#title' => t('Twitter account username'),
        '#size' => 100,
        '#required' => TRUE,
        '#default_value' => variable_get('simpletwitterfeed_username',''),
        '#description' => t('Username for the account you want to pull the feed from.')
      );
      //count
      $form['simpletwitterfeed_count'] = array(
        '#type' => 'textfield',
        '#title' => t('Number of tweets to return'),
        '#size' => 10,
        '#default_value' => variable_get('simpletwitterfeed_count', '1'),
        '#description' => t('The number of tweets you wish to have displayed. The maximum (I think) is 200.')
      );
      //consumer key
      $form['simpletwitterfeed_consumerkey'] = array(
        '#type' => 'textfield',
        '#title' => t('Consumer Key'),
        '#size' => 100,
        '#required' => TRUE,
        '#default_value' => variable_get('simpletwitterfeed_consumerkey','')
      );
      //consumer secret
      $form['simpletwitterfeed_consumersecret'] = array(
        '#type' => 'textfield',
        '#title' => t('Consumer Secret Key'),
        '#size' => 100,
        '#required' => TRUE,
        '#default_value' => variable_get('simpletwitterfeed_consumersecret','')
      );
      //token key
      $form['simpletwitterfeed_token'] = array(
        '#type' => 'textfield',
        '#title' => t('Token Key'),
        '#size' => 100,
        '#required' => TRUE,
        '#default_value' => variable_get('simpletwitterfeed_token','')
      );
      //token secret key
      $form['simpletwitterfeed_stoken'] = array(
        '#type' => 'textfield',
        '#title' => t('Token Secret Key'),
        '#size' => 100,
        '#required' => TRUE,
        '#default_value' => variable_get('simpletwitterfeed_stoken',''),
        '#description' => t('For this and the three values above it, you will need to go to http://dev.twitter.com/apps (log in with your regular Twitter account credentials) and create an app for the feed on your website. Once you create the app, you will need to create Access Keys. These keys will then need to be copied into these 4 field. For a guide on how to do this, look at http://catchlabs.com/simple-twitter-feed-instructions')
      );
      //bearer token
      $form['simpletwitterfeed_bearertoken'] = array(
        '#type' => 'textfield',
        '#title' => t('Bearer token'),
        '#size' => 100,
        '#default_value' => variable_get('simpletwitterfeed_bearertoken', ''),
        '#description' => t('This value will be automatically set on form submission if not provided, but you can view it here afterwards or provide a manually created token.')
      );
      //ttl
      $form['simpletwitterfeed_ttl'] = array(
        '#type' => 'textfield',
        '#title' => t('Block cache time-to-live'),
        '#size' => 10,
        '#default_value' => variable_get('simpletwitterfeed_ttl', '600'),
        '#description' => t('Time, in seconds, for the block cache.')
      );

      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function simpletwitterfeed_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'simple_twitter_feed':
      module_load_include('inc', 'simpletwitterfeed');
      //$text = check_plain($edit['simpletwitterfeed_username']);
      variable_set('simpletwitterfeed_username', $edit['simpletwitterfeed_username']);
      variable_set('simpletwitterfeed_count', $edit['simpletwitterfeed_count']);
      variable_set('simpletwitterfeed_token', $edit['simpletwitterfeed_token']);
      variable_set('simpletwitterfeed_stoken', $edit['simpletwitterfeed_stoken']);
      variable_set('simpletwitterfeed_consumerkey', $edit['simpletwitterfeed_consumerkey']);
      variable_set('simpletwitterfeed_consumersecret', $edit['simpletwitterfeed_consumersecret']);
      variable_set('simpletwitterfeed_ttl', $edit['simpletwitterfeed_ttl']);
      // get a new bearer token if one isn't provided
      variable_set(
        'simpletwitterfeed_bearertoken',
        _simpletwitterfeed_generate_bearer_token($edit['simpletwitterfeed_consumerkey'], $edit['simpletwitterfeed_consumersecret'])
      );
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function simpletwitterfeed_block_view($delta = '') {
  $block = array();
    switch($delta){
      case 'simple_twitter_feed':
        $block['subject'] = NULL;
        $block['content'] = _simpletwitterfeed_block_content();
        $block['#cache'] = array(
          'cid' => 'simpletwitterfeed_block',
          'bin' => 'cache',
          'expire' => time() + variable_get('simpletwitterfeed_ttl', 600),
        );
        break;
    }
    return $block;
}

/**
 * Prepare content for block
 */
function _simpletwitterfeed_block_content() {
  module_load_include('inc', 'simpletwitterfeed');

  $tweets = _simpletwitterfeed_get_tweets(
    variable_get('simpletwitterfeed_username'),
    variable_get('simpletwitterfeed_count'),
    variable_get('simpletwitterfeed_bearertoken')
  );

  if (empty($tweets)) {
    $content = 'There was an error';
  } else {
    $content = '<ul id="twitterFeed">';

    foreach ($tweets as $tweet) {
      $content .= theme('simpletwitterfeed_tweet', array(
        'text' => _simpletwitterfeed_makeURLs($tweet->text),
        'url' => 'https://twitter.com/' . $tweet->user->screen_name . '/status/' . $tweet->id,
        'time_ago' => _simpletwitterfeed_time_elapsed_string(strtotime($tweet->created_at)),
      ));
    }

    $content .= '</ul>';
  }

  return $content;

}

/**
 * Invokes hook_theme().
 */
function simpletwitterfeed_theme() {
  return array(
    'simpletwitterfeed_tweet' => array(
      'variables' => array(),
      'template' => 'simpletwitterfeed-tweet',
    ),
  );
}

//function takes the time from the tweet and computes a "time ago"
function _simpletwitterfeed_time_elapsed_string($stf_ptime) {

    $stf_etime = time() - $stf_ptime;

    if ($stf_etime < 1) {
        return '0 seconds';
    }

    $a = array( 12 * 30 * 24 * 60 * 60  =>  'year',
                30 * 24 * 60 * 60       =>  'month',
                24 * 60 * 60            =>  'day',
                60 * 60                 =>  'hour',
                60                      =>  'minute',
                1                       =>  'second'
                );

    foreach ($a as $secs => $str) {
        $d = $stf_etime / $secs;
        if ($d >= 1) {
            $r = round($d);
            return $r . ' ' . $str . ($r > 1 ? 's' : '') . ' ago';
        }
    }
}

//makes urls out of links, @usernames, and hash tags.
function _simpletwitterfeed_makeURLs($stf_text) {
  // Match URLs
  $stf_text = preg_replace('`\b(([\w-]+://?|www[.])[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|/)))`', '<a href="$0">$0</a>', $stf_text);

  // Match @name
  $stf_text = preg_replace('/(@)([a-zA-Z0-9\_]+)/', '@<a href="https://twitter.com/$2">$2</a>', $stf_text);

  // Match #hashtag
  $stf_text = preg_replace('/(#)([a-zA-Z0-9\_]+)/', '<a href="https://twitter.com/search/?q=%23$2">#$2</a>', $stf_text);

  return $stf_text;

}
